(set-option :produce-models true)
(declare-fun var637 () String)
(declare-fun var639 () String)
(declare-fun var640 () String)
(declare-fun var642 () String)
(declare-fun var643 () String)
(declare-fun var644 () String)
(declare-fun var646 () String)
(declare-fun var647 () String)
(declare-fun var648 () String)
(declare-fun var657 () Bool)
(declare-fun var659 () String)
(declare-fun var660 () String)
(declare-fun var655 () String)
(declare-fun var664 () Bool)
(declare-fun var665 () String)

(assert (str.in.re var655  (re.union  (re.++  (str.to.re "\x5c\x3c") (re.++ (re.*  (str.to.re "\x20") ) (re.++  (re.union  (str.to.re "\x53")  (str.to.re "\x73")) (re.++  (re.union  (str.to.re "\x43")  (str.to.re "\x63")) (re.++  (re.union  (str.to.re "\x52")  (str.to.re "\x72")) (re.++  (re.union  (str.to.re "\x49")  (str.to.re "\x69")) (re.++  (re.union  (str.to.re "\x50")  (str.to.re "\x70")) (re.++  (re.union  (str.to.re "\x54")  (str.to.re "\x74")) (re.++ (re.*  (str.to.re "\x20") ) (re.++  (str.to.re "\x5c\x3e") (re.++ (re.+  (re.union (re.range "\x61" "\x7a") (re.union (re.range "\x41" "\x5a") (re.union (re.range "\x30" "\x39") (re.union  (str.to.re "\x5c\x28") (re.union  (str.to.re "\x5c\x29")  (str.to.re "\x3b")))))) ) (re.++  (str.to.re "\x5c\x3c") (re.++  (str.to.re "\x2f") (re.++ (re.*  (str.to.re "\x20") ) (re.++  (re.union  (str.to.re "\x53")  (str.to.re "\x73")) (re.++  (re.union  (str.to.re "\x43")  (str.to.re "\x63")) (re.++  (re.union  (str.to.re "\x52")  (str.to.re "\x72")) (re.++  (re.union  (str.to.re "\x49")  (str.to.re "\x69")) (re.++  (re.union  (str.to.re "\x50")  (str.to.re "\x70")) (re.++  (re.union  (str.to.re "\x54")  (str.to.re "\x74")) (re.++  (str.to.re "\x20")  (str.to.re "\x5c\x3e"))))))))))))))))))))))  (re.++  (str.to.re "\x5c\x3c") (re.++ (re.*  (str.to.re "\x20") ) (re.++  (re.union  (str.to.re "\x49")  (str.to.re "\x69")) (re.++  (re.union  (str.to.re "\x4d")  (str.to.re "\x6d")) (re.++  (re.union  (str.to.re "\x47")  (str.to.re "\x67")) (re.++  (str.to.re "\x20") (re.++  (re.union  (str.to.re "\x53")  (str.to.re "\x73")) (re.++  (re.union  (str.to.re "\x52")  (str.to.re "\x72")) (re.++  (re.union  (str.to.re "\x43")  (str.to.re "\x63")) (re.++  (str.to.re "\x3d") (re.++  (re.union  (str.to.re "\x4a")  (str.to.re "\x6a")) (re.++  (re.union  (str.to.re "\x41")  (str.to.re "\x61")) (re.++  (re.union  (str.to.re "\x56")  (str.to.re "\x76")) (re.++  (re.union  (str.to.re "\x41")  (str.to.re "\x61")) (re.++  (re.union  (str.to.re "\x53")  (str.to.re "\x73")) (re.++  (re.union  (str.to.re "\x43")  (str.to.re "\x63")) (re.++  (re.union  (str.to.re "\x52")  (str.to.re "\x72")) (re.++  (re.union  (str.to.re "\x49")  (str.to.re "\x69")) (re.++  (re.union  (str.to.re "\x50")  (str.to.re "\x70")) (re.++  (re.union  (str.to.re "\x54")  (str.to.re "\x74")) (re.++  (str.to.re "\x3a") (re.++ (re.+  (re.union (re.range "\x61" "\x7a") (re.union (re.range "\x41" "\x5a") (re.union (re.range "\x30" "\x39") (re.union  (str.to.re "\x5c\x28") (re.union  (str.to.re "\x5c\x29")  (str.to.re "\x3b")))))) ) (re.++ (re.*  (str.to.re "\x20") )  (str.to.re "\x5c\x3e"))))))))))))))))))))))))) ) )
(assert (= var637 var639 ) )
(assert (= var639 (str.++ var640 "\x3c/td\x3e\x3c/tr\x3e" ) ) )
(assert (= var640 (str.++ var642 var643 ) ) )
(assert (= var642 (str.++ var644 "\x3ctr\x3e\x3ctd\x3e" ) ) )
(assert (or (= var646 var647 ) (= var646 var648 ) ) )
(assert (not (= var647 "" )) )
(assert (not (= var657 false )) )
(assert (= var657 (= var659 var660 ) ) )
(assert (not (= var659 "" )) )
(assert (not (= var655 "" )) )
(assert (not (= var664 false )) )
(assert (= var664 (= var665 "POST" ) ) )

(check-sat)
(get-model)
