(set-option :produce-models true)
(declare-fun var1259 () String)
(declare-fun var1261 () String)
(declare-fun var1262 () String)
(declare-fun var1264 () String)
(declare-fun var1265 () String)
(declare-fun var1266 () String)
(declare-fun var1268 () String)
(declare-fun var1269 () String)
(declare-fun var1270 () String)
(declare-fun var1273 () Bool)
(declare-fun var1275 () String)
(declare-fun sv1 () String)
(declare-fun sv2 () String)

(assert (= sv1 sv2 ) )
(assert (str.in.re var1269 (re.++ (re.++ (re.++  (re.++ (re.* re.allchar ) (re.++  (str.to.re "\x27") (re.++ (re.+  (str.to.re "\x20") ) (re.++  (re.union  (str.to.re "\x4f")  (str.to.re "\x6f")) (re.++  (re.union  (str.to.re "\x52")  (str.to.re "\x72")) (re.++ (re.+  (str.to.re "\x20") )  (str.to.re "\x27"))))))) (str.to.re sv1) ) (re.++  (re.++  (str.to.re "\x27") (re.++ (re.* re.allchar ) (re.++  (str.to.re "\x3d") (re.++ (re.* re.allchar )  (str.to.re "\x27"))))) (str.to.re sv2) ) )  (re.++  (str.to.re "\x27") (re.++ (re.*  (str.to.re "\x20") )  (re.union  (re.++  (str.to.re "\x5c\x2d")  (str.to.re "\x5c\x2d"))  (str.to.re "\x23")))) ) ) )
(assert (= var1259 var1261 ) )
(assert (= var1261 (str.++ var1262 "'\x29" ) ) )
(assert (= var1262 (str.++ var1264 var1265 ) ) )
(assert (= var1264 (str.++ var1266 "' AND password = '" ) ) )
(assert (= var1266 (str.++ var1268 var1269 ) ) )
(assert (= var1268 (str.++ var1270 "SELECT \x2a FROM Users WHERE \x28name = '" ) ) )
(assert (not (= var1269 "" )) )
(assert (not (= var1273 false )) )
(assert (= var1273 (= var1275 "POST" ) ) )

(check-sat)
(get-model)
