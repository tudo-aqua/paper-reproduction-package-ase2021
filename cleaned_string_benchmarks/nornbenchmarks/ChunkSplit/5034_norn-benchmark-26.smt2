(set-logic QF_S)

(declare-fun var_0 () String)
(declare-fun var_1 () String)
(declare-fun var_2 () String)
(declare-fun var_3 () String)
(declare-fun var_4 () String)
(declare-fun var_5 () String)
(declare-fun var_6 () String)
(declare-fun var_7 () String)
(declare-fun var_8 () String)
(declare-fun var_9 () String)
(declare-fun var_10 () String)
(declare-fun var_11 () String)
(declare-fun var_12 () String)

(assert (str.in.re (str.++ var_10 var_11 var_12 "z" var_10 ) (re.* (re.union (str.to.re "z") (re.union (re.union (str.to.re "a") (str.to.re "b")) (str.to.re "c"))))))
(assert (str.in.re var_10 (re.* (re.range "a" "u"))))
(assert (str.in.re (str.++ var_10 var_11 var_12 ) (re.* (re.range "a" "u"))))
(assert (not (str.in.re (str.++ var_10 var_11 "c" var_12 "z" var_10 var_11 ) (re.* (re.union (str.to.re "z") (re.union (re.union (str.to.re "a") (str.to.re "b")) (str.to.re "c")))))))
(assert (and (and (and (and (and (<= (+ (str.len var_11) (- 8) ) 0 ) (<= 0  (+ (str.len var_11) (- 8) ))) (and (<= (+ (+ (+ (str.len var_12) (str.len var_10)) (* (- 1)  (str.len var_5))) 8 ) 0 ) (<= 0  (+ (+ (+ (str.len var_12) (str.len var_10)) (* (- 1)  (str.len var_5))) 8 )))) (and (<= (+ (+ (str.len var_8) (* (- 1)  (str.len var_10))) (- 8) ) 0 ) (<= 0  (+ (+ (str.len var_8) (* (- 1)  (str.len var_10))) (- 8) )))) (<= 0  (+ (+ (* (- 1)  (str.len var_10)) (str.len var_5)) (- 8) ))) (<= 0  (str.len var_10))))
(check-sat)
