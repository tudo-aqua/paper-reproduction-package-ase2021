;  depth   = 3
;  nconst  = 6
;  assertions = 7
;  timeout = 2500
;  time    = {'smt_solvers/QF_S/z3seq/': 0.0909113883972168, 'smt_solvers/QF_S/z3str3fed/': 0.06927990913391113, 'smt_solvers/QF_S/cvc4/': 0.29584813117980957, 'smt_solvers/QF_S/z3str3/': 0.11127185821533203}
;  score   = 0.18457627296447754
;  stdout  = {'smt_solvers/QF_S/z3seq/': 'unsat', 'smt_solvers/QF_S/z3str3fed/': 'unsat', 'smt_solvers/QF_S/cvc4/': 'unsat', 'smt_solvers/QF_S/z3str3/': 'unsat'}
(set-logic QF_S)(declare-fun var0 () String)(declare-fun var1 () String)(declare-fun var2 () String)(declare-fun var3 () String)(declare-fun var4 () String)(declare-fun var5 () String)(declare-fun var6 () Int)(declare-fun var7 () Int)(declare-fun var8 () Int)(declare-fun var9 () Int)(declare-fun var10 () Int)(declare-fun var11 () Int)(declare-fun var12 () Bool)(declare-fun var13 () Bool)(declare-fun var14 () Bool)(declare-fun var15 () Bool)(declare-fun var16 () Bool)(declare-fun var17 () Bool)(assert (str.in.re "BaI5],0w_y" re.allchar))(assert (str.contains (str.replace var3 var1 var4) (str.at var2 var9)))(assert (str.prefixof (str.replace var5 var3 var5) (str.at var4 var6)))(assert (str.suffixof (str.substr (str.at var4 2) (str.indexof var5 var5 var7) (str.indexof var2 var2 (str.indexof var0 var4 var7))) (str.at var4 var8)))(assert (>= (str.indexof var3 var2 8) (str.indexof var2 var2 (str.indexof (str.replace var3 var4 var1) (str.replace var1 var1 var1) (str.indexof var0 var0 (str.indexof var0 var2 var7))))))(assert (not var13))(assert (<= (str.indexof "bpv@k;?r(," var3 var6) (str.indexof var0 var0 (str.indexof (str.replace var5 var5 var1) (str.replace var4 var1 var3) (str.indexof var0 var0 var8)))))(check-sat)