;  depth   = 3
;  nconst  = 6
;  assertions = 7
;  timeout = 2500
;  time    = {'smt_solvers/QF_S/z3seq/': 0.09665870666503906, 'smt_solvers/QF_S/z3str3fed/': 0.08025455474853516, 'smt_solvers/QF_S/cvc4/': 0.7460212707519531, 'smt_solvers/QF_S/z3str3/': 0.16529083251953125}
;  score   = 0.5807304382324219
;  stdout  = {'smt_solvers/QF_S/z3seq/': 'unsat', 'smt_solvers/QF_S/z3str3fed/': 'unsat', 'smt_solvers/QF_S/cvc4/': 'unsat', 'smt_solvers/QF_S/z3str3/': 'unsat'}
(set-logic QF_S)(declare-fun var0 () String)(declare-fun var1 () String)(declare-fun var2 () String)(declare-fun var3 () String)(declare-fun var4 () String)(declare-fun var5 () String)(declare-fun var6 () Int)(declare-fun var7 () Int)(declare-fun var8 () Int)(declare-fun var9 () Int)(declare-fun var10 () Int)(declare-fun var11 () Int)(declare-fun var12 () Bool)(declare-fun var13 () Bool)(declare-fun var14 () Bool)(declare-fun var15 () Bool)(declare-fun var16 () Bool)(declare-fun var17 () Bool)(assert (str.in.re var0 (re.+ re.allchar)))(assert (str.in.re (str.substr (str.substr var1 var7 9) (str.indexof var0 var0 var9) (str.indexof var4 var4 (str.indexof (str.at var3 var8) (str.substr var5 var10 var7) (str.indexof var3 var4 var10)))) (re.+ (re.* re.allchar))))(assert (< (str.indexof var3 var1 var10) (str.indexof var5 var4 var8)))(assert (str.in.re (str.substr var5 (str.indexof var3 var5 var8) (str.indexof (str.at var5 var9) (str.substr var2 var8 var7) (str.indexof var4 var1 var8))) (re.+ (re.+ re.allchar))))(assert (> (str.len var1) (str.indexof var4 var4 (str.indexof (str.replace var1 var2 var3) (str.substr var0 var11 var7) (str.indexof var0 var1 var8)))))(assert (> (str.indexof var4 var5 var8) (str.len "H[FBrCGCp*")))(assert (< var8 var7))(check-sat)