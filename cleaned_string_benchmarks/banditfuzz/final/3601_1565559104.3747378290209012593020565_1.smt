;  depth   = 3
;  nconst  = 6
;  assertions = 5
;  timeout = 2500
;  time    = {'smt_solvers/QF_S/z3str3fed/': 0.07784318923950195, 'smt_solvers/QF_S/cvc4/': 0.33947253227233887, 'smt_solvers/QF_S/z3seq/': 0.09909653663635254, 'smt_solvers/QF_S/z3str3/': 0.142486572265625}
;  score   = 0.19698596000671387
;  stdout  = {'smt_solvers/QF_S/z3str3fed/': 'unsat', 'smt_solvers/QF_S/cvc4/': 'unsat', 'smt_solvers/QF_S/z3seq/': 'unsat', 'smt_solvers/QF_S/z3str3/': 'unsat'}
(set-logic QF_S)(declare-fun var0 () String)(declare-fun var1 () String)(declare-fun var2 () String)(declare-fun var3 () String)(declare-fun var4 () String)(declare-fun var5 () String)(declare-fun var6 () Int)(declare-fun var7 () Int)(declare-fun var8 () Int)(declare-fun var9 () Int)(declare-fun var10 () Int)(declare-fun var11 () Int)(declare-fun var12 () Bool)(declare-fun var13 () Bool)(declare-fun var14 () Bool)(declare-fun var15 () Bool)(declare-fun var16 () Bool)(declare-fun var17 () Bool)(assert (not (str.prefixof var3 var5)))(assert (str.prefixof (str.at "#thtR,uEqz" var6) (str.at var1 var9)))(assert (str.in.re (str.substr (str.at var2 var10) (str.len var1) (str.len "&OX}-]d4QN")) (re.+ (re.++ re.allchar re.allchar))))(assert (str.in.re (str.substr var2 var6 var10) (re.+ re.allchar)))(assert (>= (str.indexof (str.at "1@Usj&{*e~" var8) (str.substr "+RLt<E9pn%" (str.len var4) (str.len (str.substr var1 var10 var8))) (str.indexof var1 var4 var7)) (str.indexof (str.replace var4 var3 var5) (str.substr var5 var10 var9) (str.indexof var0 var2 var6))))(check-sat)