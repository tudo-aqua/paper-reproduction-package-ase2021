;  depth   = 3
;  nconst  = 6
;  assertions = 7
;  timeout = 2500
;  time    = {'smt_solvers/QF_S/cvc4/': 0.1549227237701416, 'smt_solvers/QF_S/z3str3fed/': 0.07098579406738281, 'smt_solvers/QF_S/z3seq/': 0.08757758140563965, 'smt_solvers/QF_S/z3str3/': 0.0979759693145752}
;  score   = 0.056946754455566406
;  stdout  = {'smt_solvers/QF_S/cvc4/': 'unsat', 'smt_solvers/QF_S/z3str3fed/': 'unsat', 'smt_solvers/QF_S/z3seq/': 'unsat', 'smt_solvers/QF_S/z3str3/': 'unsat'}
(set-logic QF_S)(declare-fun var0 () String)(declare-fun var1 () String)(declare-fun var2 () String)(declare-fun var3 () String)(declare-fun var4 () String)(declare-fun var5 () String)(declare-fun var6 () Int)(declare-fun var7 () Int)(declare-fun var8 () Int)(declare-fun var9 () Int)(declare-fun var10 () Int)(declare-fun var11 () Int)(declare-fun var12 () Bool)(declare-fun var13 () Bool)(declare-fun var14 () Bool)(declare-fun var15 () Bool)(declare-fun var16 () Bool)(declare-fun var17 () Bool)(assert (< (str.indexof (str.substr var5 var10 var6) (str.substr var3 var11 var7) (str.indexof var3 "\\dTiPb=(jW" var7)) (str.len var0)))(assert (> var11 var11))(assert (>= (str.indexof (str.++ var2 var2) (str.substr "/iN-xu]:7D" var7 var9) (str.indexof var3 "/!?hQar5{f" var9)) (str.indexof var2 var0 var10)))(assert (not var16))(assert (> (str.indexof var4 var1 var11) (str.indexof var3 var2 var7)))(assert (str.contains (str.at (str.substr "~s7_#oHG_""" var9 var9) (str.len var0)) (str.at var0 var8)))(assert (str.prefixof (str.at var1 var6) (str.++ var0 var0)))(check-sat)