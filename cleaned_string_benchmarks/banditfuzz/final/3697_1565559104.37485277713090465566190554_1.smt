;  depth   = 3
;  nconst  = 6
;  assertions = 5
;  timeout = 2500
;  time    = {'smt_solvers/QF_S/z3str3/': 0.12125635147094727, 'smt_solvers/QF_S/z3str3fed/': 0.07584977149963379, 'smt_solvers/QF_S/z3seq/': 0.09204268455505371, 'smt_solvers/QF_S/cvc4/': 0.4821643829345703}
;  score   = 0.36090803146362305
;  stdout  = {'smt_solvers/QF_S/z3str3/': 'unsat', 'smt_solvers/QF_S/z3str3fed/': 'unsat', 'smt_solvers/QF_S/z3seq/': 'unsat', 'smt_solvers/QF_S/cvc4/': 'unsat'}
(set-logic QF_S)(declare-fun var0 () String)(declare-fun var1 () String)(declare-fun var2 () String)(declare-fun var3 () String)(declare-fun var4 () String)(declare-fun var5 () String)(declare-fun var6 () Int)(declare-fun var7 () Int)(declare-fun var8 () Int)(declare-fun var9 () Int)(declare-fun var10 () Int)(declare-fun var11 () Int)(declare-fun var12 () Bool)(declare-fun var13 () Bool)(declare-fun var14 () Bool)(declare-fun var15 () Bool)(declare-fun var16 () Bool)(declare-fun var17 () Bool)(assert (str.in.re (str.substr var0 var7 var9) (re.inter (re.+ re.allchar) (re.+ re.allchar))))(assert (< (str.indexof (str.at var4 var11) (str.at var2 var8) (str.indexof var4 var2 var10)) (str.indexof var2 var4 var7)))(assert (not (< var7 var11)))(assert (str.prefixof (str.substr (str.at var4 var11) (str.indexof var0 var4 var10) (str.indexof var1 var3 var8)) (str.at var3 var6)))(assert (<= (str.len "LCz@_Fm_>Y") (str.indexof var1 var1 (str.indexof (str.at var2 var7) (str.at var5 var6) (str.len var5)))))(check-sat)