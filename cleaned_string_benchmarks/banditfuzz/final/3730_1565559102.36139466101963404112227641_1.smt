;  depth   = 3
;  nconst  = 6
;  assertions = 5
;  timeout = 2500
;  time    = {'smt_solvers/QF_S/cvc4/': 0.31865406036376953, 'smt_solvers/QF_S/z3str3/': 0.11169195175170898, 'smt_solvers/QF_S/z3str3fed/': 0.08399534225463867, 'smt_solvers/QF_S/z3seq/': 0.10334205627441406}
;  score   = 0.20696210861206055
;  stdout  = {'smt_solvers/QF_S/cvc4/': 'unsat', 'smt_solvers/QF_S/z3str3/': 'unsat', 'smt_solvers/QF_S/z3str3fed/': 'unsat', 'smt_solvers/QF_S/z3seq/': 'unsat'}
(set-logic QF_S)(declare-fun var0 () String)(declare-fun var1 () String)(declare-fun var2 () String)(declare-fun var3 () String)(declare-fun var4 () String)(declare-fun var5 () String)(declare-fun var6 () Int)(declare-fun var7 () Int)(declare-fun var8 () Int)(declare-fun var9 () Int)(declare-fun var10 () Int)(declare-fun var11 () Int)(declare-fun var12 () Bool)(declare-fun var13 () Bool)(declare-fun var14 () Bool)(declare-fun var15 () Bool)(declare-fun var16 () Bool)(declare-fun var17 () Bool)(assert (> (str.indexof (str.replace var2 var3 "r'cT0TB-7i") (str.substr var0 var8 var10) (str.len var5)) (str.len var3)))(assert (str.prefixof (str.at (str.at var5 var8) (str.len var3)) (str.at (str.at "rg?(1P1FX)" (str.len var2)) (str.len var3))))(assert (str.in.re var5 re.allchar))(assert (< (str.len var2) (str.len var3)))(assert (< (str.indexof (str.substr var5 var11 var6) (str.substr var0 var8 var8) (str.len var5)) (str.to.int var3)))(check-sat)