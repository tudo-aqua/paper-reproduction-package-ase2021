;  depth   = 3
;  nconst  = 6
;  assertions = 7
;  timeout = 2500
;  time    = {'smt_solvers/QF_S/cvc4/': 0.7596261501312256, 'smt_solvers/QF_S/z3seq/': 0.10183954238891602, 'smt_solvers/QF_S/z3str3fed/': 0.08478927612304688, 'smt_solvers/QF_S/z3str3/': 0.11562728881835938}
;  score   = 0.6439988613128662
;  stdout  = {'smt_solvers/QF_S/cvc4/': 'unsat', 'smt_solvers/QF_S/z3seq/': 'unsat', 'smt_solvers/QF_S/z3str3fed/': 'unsat', 'smt_solvers/QF_S/z3str3/': 'unsat'}
(set-logic QF_S)(declare-fun var0 () String)(declare-fun var1 () String)(declare-fun var2 () String)(declare-fun var3 () String)(declare-fun var4 () String)(declare-fun var5 () String)(declare-fun var6 () Int)(declare-fun var7 () Int)(declare-fun var8 () Int)(declare-fun var9 () Int)(declare-fun var10 () Int)(declare-fun var11 () Int)(declare-fun var12 () Bool)(declare-fun var13 () Bool)(declare-fun var14 () Bool)(declare-fun var15 () Bool)(declare-fun var16 () Bool)(declare-fun var17 () Bool)(assert (< (str.indexof var1 var2 var9) (str.indexof (str.substr var3 var11 var7) (str.replace var0 var5 var0) (str.indexof var0 var3 var8))))(assert (str.in.re (str.substr var3 var10 var11) (re.* (re.++ re.allchar re.allchar))))(assert (>= var10 4))(assert (> (str.indexof var0 var3 6) (str.len var4)))(assert (str.prefixof var5 var5))(assert (str.in.re var2 re.allchar))(assert (str.in.re (str.at var5 var6) (re.inter re.allchar re.allchar)))(check-sat)