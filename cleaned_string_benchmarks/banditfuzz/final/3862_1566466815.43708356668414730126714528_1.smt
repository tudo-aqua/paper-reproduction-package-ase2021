;  depth   = 3
;  nconst  = 6
;  assertions = 7
;  timeout = 2500
;  time    = {'smt_solvers/QF_S/z3seq/': 0.09154915809631348, 'smt_solvers/QF_S/cvc4/': 2500, 'smt_solvers/QF_S/z3str3fed/': 0.4404327869415283, 'smt_solvers/QF_S/z3str3/': 0.12870311737060547}
;  score   = 7499.5595672130585
;  stdout  = {'smt_solvers/QF_S/z3seq/': 'unsat', 'smt_solvers/QF_S/cvc4/': 'timeout', 'smt_solvers/QF_S/z3str3fed/': 'unsat', 'smt_solvers/QF_S/z3str3/': 'unsat'}
(set-logic QF_S)(declare-fun var0 () String)(declare-fun var1 () String)(declare-fun var2 () String)(declare-fun var3 () String)(declare-fun var4 () String)(declare-fun var5 () String)(declare-fun var6 () Int)(declare-fun var7 () Int)(declare-fun var8 () Int)(declare-fun var9 () Int)(declare-fun var10 () Int)(declare-fun var11 () Int)(declare-fun var12 () Bool)(declare-fun var13 () Bool)(declare-fun var14 () Bool)(declare-fun var15 () Bool)(declare-fun var16 () Bool)(declare-fun var17 () Bool)(assert (< (str.len var4) (str.len var0)))(assert (> var9 var8))(assert (str.prefixof var4 "f>V8'C2R`l"))(assert (str.suffixof (str.replace var2 var0 var0) (str.substr var3 var6 6)))(assert (<= (str.len var5) (str.len var0)))(assert (< (str.len (str.substr var1 var9 var6)) (str.indexof (str.replace var5 var5 var4) (str.replace var4 "^}T&6?;gN6" var5) (str.len var2))))(assert (str.contains (str.substr var1 var8 var7) (str.replace var1 var5 var4)))(check-sat)