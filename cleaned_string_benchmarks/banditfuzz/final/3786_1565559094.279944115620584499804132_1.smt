;  depth   = 3
;  nconst  = 6
;  assertions = 5
;  timeout = 2500
;  time    = {'smt_solvers/QF_S/z3seq/': 0.08909749984741211, 'smt_solvers/QF_S/z3str3/': 0.0901031494140625, 'smt_solvers/QF_S/cvc4/': 0.16234350204467773, 'smt_solvers/QF_S/z3str3fed/': 0.07323551177978516}
;  score   = 0.07224035263061523
;  stdout  = {'smt_solvers/QF_S/z3seq/': 'unsat', 'smt_solvers/QF_S/z3str3/': 'unsat', 'smt_solvers/QF_S/cvc4/': 'unsat', 'smt_solvers/QF_S/z3str3fed/': 'unsat'}
(set-logic QF_S)(declare-fun var0 () String)(declare-fun var1 () String)(declare-fun var2 () String)(declare-fun var3 () String)(declare-fun var4 () String)(declare-fun var5 () String)(declare-fun var6 () Int)(declare-fun var7 () Int)(declare-fun var8 () Int)(declare-fun var9 () Int)(declare-fun var10 () Int)(declare-fun var11 () Int)(declare-fun var12 () Bool)(declare-fun var13 () Bool)(declare-fun var14 () Bool)(declare-fun var15 () Bool)(declare-fun var16 () Bool)(declare-fun var17 () Bool)(assert (<= (str.indexof (str.at var5 var7) (str.substr var4 var7 var7) (str.indexof var4 var1 var11)) (str.indexof (str.replace var4 var2 var5) (str.replace var0 var1 var1) (str.len var1))))(assert (str.in.re (str.replace (str.replace var3 var1 var2) (str.at var2 var8) (str.replace var3 var0 var3)) (re.+ (re.* re.allchar))))(assert (<= (str.indexof var0 var0 1) (str.indexof var5 var3 9)))(assert (>= (str.len var3) (str.len var5)))(assert (> var8 var8))(check-sat)