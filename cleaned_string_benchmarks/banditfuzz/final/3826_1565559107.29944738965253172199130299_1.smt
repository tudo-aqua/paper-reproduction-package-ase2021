;  depth   = 3
;  nconst  = 6
;  assertions = 5
;  timeout = 2500
;  time    = {'smt_solvers/QF_S/z3seq/': 0.09354186058044434, 'smt_solvers/QF_S/z3str3/': 0.11438679695129395, 'smt_solvers/QF_S/z3str3fed/': 0.0765681266784668, 'smt_solvers/QF_S/cvc4/': 0.44824862480163574}
;  score   = 0.3338618278503418
;  stdout  = {'smt_solvers/QF_S/z3seq/': 'unsat', 'smt_solvers/QF_S/z3str3/': 'unsat', 'smt_solvers/QF_S/z3str3fed/': 'unsat', 'smt_solvers/QF_S/cvc4/': 'unsat'}
(set-logic QF_S)(declare-fun var0 () String)(declare-fun var1 () String)(declare-fun var2 () String)(declare-fun var3 () String)(declare-fun var4 () String)(declare-fun var5 () String)(declare-fun var6 () Int)(declare-fun var7 () Int)(declare-fun var8 () Int)(declare-fun var9 () Int)(declare-fun var10 () Int)(declare-fun var11 () Int)(declare-fun var12 () Bool)(declare-fun var13 () Bool)(declare-fun var14 () Bool)(declare-fun var15 () Bool)(declare-fun var16 () Bool)(declare-fun var17 () Bool)(assert (< (str.len var3) (str.indexof (str.substr var4 var8 var6) (str.at var0 var11) (str.indexof var2 var2 var9))))(assert (str.prefixof (str.replace var3 var5 var1) (str.replace (str.replace var4 var1 var1) (str.replace var0 var2 var5) (str.substr var0 var9 6))))(assert (<= (str.len var4) (str.indexof var1 var1 var8)))(assert (str.prefixof (str.at (str.substr var4 var8 var6) (str.len "<WIY_~*""^9")) (str.at (str.replace var4 var1 var4) (str.len ":]V^t&Rh^3"))))(assert (str.suffixof (str.at (str.substr var0 var7 var10) (str.indexof "^kT^j>j05f" var2 var9)) (str.substr (str.substr var5 var6 var11) (str.indexof var1 var4 var8) (str.indexof var1 var1 var8))))(check-sat)