;  depth   = 3
;  nconst  = 6
;  assertions = 5
;  timeout = 2500
;  time    = {'smt_solvers/QF_S/z3str3/': 0.13055062294006348, 'smt_solvers/QF_S/z3seq/': 0.30927157402038574, 'smt_solvers/QF_S/z3str3fed/': 0.5539340972900391, 'smt_solvers/QF_S/cvc4/': 0.7463455200195312}
;  score   = 0.1924114227294922
;  stdout  = {'smt_solvers/QF_S/z3str3/': 'unsat', 'smt_solvers/QF_S/z3seq/': 'sat', 'smt_solvers/QF_S/z3str3fed/': 'sat', 'smt_solvers/QF_S/cvc4/': 'sat'}
(set-logic QF_S)(declare-fun var0 () String)(declare-fun var1 () String)(declare-fun var2 () String)(declare-fun var3 () String)(declare-fun var4 () String)(declare-fun var5 () String)(declare-fun var6 () Int)(declare-fun var7 () Int)(declare-fun var8 () Int)(declare-fun var9 () Int)(declare-fun var10 () Int)(declare-fun var11 () Int)(declare-fun var12 () Bool)(declare-fun var13 () Bool)(declare-fun var14 () Bool)(declare-fun var15 () Bool)(declare-fun var16 () Bool)(declare-fun var17 () Bool)(assert (str.suffixof (str.at var4 var6) (str.replace "4t4m2MF+M9" var5 var0)))(assert (>= (str.indexof var2 var2 (str.len var0)) (str.indexof var0 var5 var8)))(assert (str.in.re var1 re.allchar))(assert (str.contains (str.at var0 var6) (str.substr (str.at var2 var8) (str.indexof var0 var4 10) (str.indexof var2 var3 var9))))(assert (> (str.indexof (str.at var1 var10) (str.replace var0 var4 var1) (str.len var0)) (str.indexof (str.replace var1 var5 var3) (str.at var5 var8) (str.len var0))))(check-sat)