;  depth   = 3
;  nconst  = 6
;  assertions = 7
;  timeout = 2500
;  time    = {'smt_solvers/QF_S/cvc4/': 0.27539873123168945, 'smt_solvers/QF_S/z3str3fed/': 0.07133650779724121, 'smt_solvers/QF_S/z3str3/': 0.12176251411437988, 'smt_solvers/QF_S/z3seq/': 0.10198450088500977}
;  score   = 0.15363621711730957
;  stdout  = {'smt_solvers/QF_S/cvc4/': 'unsat', 'smt_solvers/QF_S/z3str3fed/': 'unsat', 'smt_solvers/QF_S/z3str3/': 'unsat', 'smt_solvers/QF_S/z3seq/': 'unsat'}
(set-logic QF_S)(declare-fun var0 () String)(declare-fun var1 () String)(declare-fun var2 () String)(declare-fun var3 () String)(declare-fun var4 () String)(declare-fun var5 () String)(declare-fun var6 () Int)(declare-fun var7 () Int)(declare-fun var8 () Int)(declare-fun var9 () Int)(declare-fun var10 () Int)(declare-fun var11 () Int)(declare-fun var12 () Bool)(declare-fun var13 () Bool)(declare-fun var14 () Bool)(declare-fun var15 () Bool)(declare-fun var16 () Bool)(declare-fun var17 () Bool)(assert (>= (str.indexof var1 var3 var10) (str.indexof var2 var0 var11)))(assert (str.contains var5 var5))(assert (> (str.indexof (str.substr var3 var9 var7) (str.at "{.fP#zcREq" var7) (str.len var0)) (str.len (str.replace var3 var5 var5))))(assert (>= (str.indexof var4 var4 var11) (str.indexof (str.substr "PBO1faes\\F" var11 var9) (str.at "K3($L2@#^;" var8) (str.len var0))))(assert (str.prefixof (str.at (str.at var0 var11) (str.indexof "^5{XePYBJ=" var4 var6)) (str.substr (str.replace var0 var5 "=l`8xCpoK_") (str.indexof var4 var5 var11) (str.len var4))))(assert (>= var9 8))(assert (str.suffixof var4 var0))(check-sat)