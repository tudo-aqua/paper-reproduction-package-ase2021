;  depth   = 3
;  nconst  = 6
;  assertions = 5
;  timeout = 2500
;  time    = {'smt_solvers/QF_S/z3str3fed/': 0.08814096450805664, 'smt_solvers/QF_S/z3str3/': 0.11976504325866699, 'smt_solvers/QF_S/z3seq/': 0.10895895957946777, 'smt_solvers/QF_S/cvc4/': 0.6243777275085449}
;  score   = 0.5046126842498779
;  stdout  = {'smt_solvers/QF_S/z3str3fed/': 'unsat', 'smt_solvers/QF_S/z3str3/': 'unsat', 'smt_solvers/QF_S/z3seq/': 'unsat', 'smt_solvers/QF_S/cvc4/': 'unsat'}
(set-logic QF_S)(declare-fun var0 () String)(declare-fun var1 () String)(declare-fun var2 () String)(declare-fun var3 () String)(declare-fun var4 () String)(declare-fun var5 () String)(declare-fun var6 () Int)(declare-fun var7 () Int)(declare-fun var8 () Int)(declare-fun var9 () Int)(declare-fun var10 () Int)(declare-fun var11 () Int)(declare-fun var12 () Bool)(declare-fun var13 () Bool)(declare-fun var14 () Bool)(declare-fun var15 () Bool)(declare-fun var16 () Bool)(declare-fun var17 () Bool)(assert (> (str.indexof (str.replace var0 var4 "z[,9gi!a%s") (str.replace var2 var2 var2) (str.len var5)) (str.indexof (str.replace var2 var5 var4) (str.at var0 var11) (str.indexof var2 var5 var9))))(assert (str.contains (str.replace var4 var1 var5) (str.replace var0 var0 var5)))(assert (>= (str.indexof (str.substr var2 var6 var8) (str.replace var0 var0 var1) (str.indexof var5 var3 var7)) (str.indexof (str.replace var4 var1 var2) (str.replace var0 var4 var3) (str.len var0))))(assert (not (> 1 var10)))(assert (> (str.indexof (str.at var4 var7) (str.substr var4 var10 var6) (str.indexof var3 var3 var9)) (str.len (str.substr "cs*mfwoQGK" 0 var7))))(check-sat)