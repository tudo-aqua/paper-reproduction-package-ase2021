;  depth   = 3
;  nconst  = 6
;  assertions = 7
;  timeout = 2500
;  time    = {'smt_solvers/QF_S/cvc4/': 0.5425543785095215, 'smt_solvers/QF_S/z3str3fed/': 0.12588787078857422, 'smt_solvers/QF_S/z3str3/': 0.25777626037597656, 'smt_solvers/QF_S/z3seq/': 0.20813941955566406}
;  score   = 0.2847781181335449
;  stdout  = {'smt_solvers/QF_S/cvc4/': 'unsat', 'smt_solvers/QF_S/z3str3fed/': 'unsat', 'smt_solvers/QF_S/z3str3/': 'unsat', 'smt_solvers/QF_S/z3seq/': 'unsat'}
(set-logic QF_S)(declare-fun var0 () String)(declare-fun var1 () String)(declare-fun var2 () String)(declare-fun var3 () String)(declare-fun var4 () String)(declare-fun var5 () String)(declare-fun var6 () Int)(declare-fun var7 () Int)(declare-fun var8 () Int)(declare-fun var9 () Int)(declare-fun var10 () Int)(declare-fun var11 () Int)(declare-fun var12 () Bool)(declare-fun var13 () Bool)(declare-fun var14 () Bool)(declare-fun var15 () Bool)(declare-fun var16 () Bool)(declare-fun var17 () Bool)(assert (str.prefixof var4 "m^deXxv^!\\"))(assert (str.prefixof (str.substr (str.at var5 var7) (str.indexof var3 var1 var6) (str.indexof var2 var0 8)) (str.substr (str.replace var3 var1 "dO+b""1S|!*") (str.indexof var1 var3 var6) (str.indexof var3 var1 var8))))(assert (> (str.len var4) (str.indexof var2 "U}>Ub)`),%" var8)))(assert (> (str.indexof var3 var2 var11) (str.indexof var3 var5 var8)))(assert (>= (str.indexof var4 var4 var8) (str.indexof var5 var1 var9)))(assert (not (str.in.re (str.replace var3 var3 var3) (re.* re.allchar))))(assert (str.contains (str.++ "VF}W?d6;6>" "VF}W?d6;6>") (str.substr var0 var7 var7)))(check-sat)