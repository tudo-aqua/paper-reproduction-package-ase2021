;  depth   = 3
;  nconst  = 6
;  assertions = 7
;  timeout = 2500
;  time    = {'smt_solvers/QF_S/z3str3fed/': 0.08729195594787598, 'smt_solvers/QF_S/z3seq/': 0.11087489128112793, 'smt_solvers/QF_S/z3str3/': 0.12944960594177246, 'smt_solvers/QF_S/cvc4/': 0.4951903820037842}
;  score   = 0.3657407760620117
;  stdout  = {'smt_solvers/QF_S/z3str3fed/': 'unsat', 'smt_solvers/QF_S/z3seq/': 'unsat', 'smt_solvers/QF_S/z3str3/': 'unsat', 'smt_solvers/QF_S/cvc4/': 'unsat'}
(set-logic QF_S)(declare-fun var0 () String)(declare-fun var1 () String)(declare-fun var2 () String)(declare-fun var3 () String)(declare-fun var4 () String)(declare-fun var5 () String)(declare-fun var6 () Int)(declare-fun var7 () Int)(declare-fun var8 () Int)(declare-fun var9 () Int)(declare-fun var10 () Int)(declare-fun var11 () Int)(declare-fun var12 () Bool)(declare-fun var13 () Bool)(declare-fun var14 () Bool)(declare-fun var15 () Bool)(declare-fun var16 () Bool)(declare-fun var17 () Bool)(assert (< (str.len (str.replace var5 var3 var1)) (str.len (str.replace var5 var1 var1))))(assert (str.in.re (str.substr (str.substr var3 var9 var11) (str.len var5) (str.indexof var4 var1 var6)) (re.+ re.allchar)))(assert (not (str.in.re (str.replace var3 var2 "wF1j4L%(IE") (re.+ re.allchar))))(assert (str.in.re (str.replace (str.replace var2 var5 var2) (str.at var2 var7) (str.at var4 var8)) (re.+ (re.+ re.allchar))))(assert (< var11 var6))(assert (str.in.re (str.replace var0 var2 "{<zMr`cM&^") (re.+ re.allchar)))(assert (<= (str.indexof var5 var0 var8) (str.indexof var1 var0 var11)))(check-sat)