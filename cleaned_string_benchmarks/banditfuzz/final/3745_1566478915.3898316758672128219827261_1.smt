;  depth   = 3
;  nconst  = 6
;  assertions = 7
;  timeout = 2500
;  time    = {'smt_solvers/QF_S/z3seq/': 0.545849084854126, 'smt_solvers/QF_S/z3str3/': 0.5050678253173828, 'smt_solvers/QF_S/z3str3fed/': 1.2818732261657715, 'smt_solvers/QF_S/cvc4/': 2.146433115005493}
;  score   = 0.8645598888397217
;  stdout  = {'smt_solvers/QF_S/z3seq/': 'sat', 'smt_solvers/QF_S/z3str3/': 'sat', 'smt_solvers/QF_S/z3str3fed/': 'sat', 'smt_solvers/QF_S/cvc4/': 'sat'}
(set-logic QF_S)(declare-fun var0 () String)(declare-fun var1 () String)(declare-fun var2 () String)(declare-fun var3 () String)(declare-fun var4 () String)(declare-fun var5 () String)(declare-fun var6 () Int)(declare-fun var7 () Int)(declare-fun var8 () Int)(declare-fun var9 () Int)(declare-fun var10 () Int)(declare-fun var11 () Int)(declare-fun var12 () Bool)(declare-fun var13 () Bool)(declare-fun var14 () Bool)(declare-fun var15 () Bool)(declare-fun var16 () Bool)(declare-fun var17 () Bool)(assert (> (str.len var3) (str.len (str.substr var3 var7 var6))))(assert (str.contains (str.substr var4 var6 var10) (str.replace var1 var5 var4)))(assert (str.suffixof (str.replace var0 var2 var3) (str.replace (str.substr var1 var9 1) (str.substr "7Ap8y""Y8Pt" var9 var11) (str.replace var1 "vhnZtax[%k" var2))))(assert (not (>= var11 var9)))(assert (< var10 var9))(assert (not (str.contains var5 var4)))(assert (str.suffixof (str.replace "(!>KAAj@v{" var5 var4) (str.at var2 var11)))(check-sat)