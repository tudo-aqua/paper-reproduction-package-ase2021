;  depth   = 3
;  nconst  = 6
;  assertions = 7
;  timeout = 2500
;  time    = {'smt_solvers/QF_S/z3str3fed/': 0.2633230686187744, 'smt_solvers/QF_S/z3str3/': 0.15732169151306152, 'smt_solvers/QF_S/cvc4/': 1490.0434529781342, 'smt_solvers/QF_S/z3seq/': 0.1252758502960205}
;  score   = 1489.7801299095154
;  stdout  = {'smt_solvers/QF_S/z3str3fed/': 'unsat', 'smt_solvers/QF_S/z3str3/': 'unsat', 'smt_solvers/QF_S/cvc4/': 'unsat', 'smt_solvers/QF_S/z3seq/': 'unsat'}
(set-logic QF_S)(declare-fun var0 () String)(declare-fun var1 () String)(declare-fun var2 () String)(declare-fun var3 () String)(declare-fun var4 () String)(declare-fun var5 () String)(declare-fun var6 () Int)(declare-fun var7 () Int)(declare-fun var8 () Int)(declare-fun var9 () Int)(declare-fun var10 () Int)(declare-fun var11 () Int)(declare-fun var12 () Bool)(declare-fun var13 () Bool)(declare-fun var14 () Bool)(declare-fun var15 () Bool)(declare-fun var16 () Bool)(declare-fun var17 () Bool)(assert (str.contains var3 var5))(assert (str.in.re var3 re.allchar))(assert (str.contains (str.substr (str.substr var4 var7 var9) (str.indexof var3 var5 var8) (str.indexof var5 var2 var7)) (str.substr var0 var8 5)))(assert (> (str.indexof (str.at var1 3) (str.substr var1 var9 var9) (str.indexof var0 var3 var7)) (str.indexof (str.at var4 var9) (str.at var4 var9) (str.len (str.substr var0 var9 var10)))))(assert (str.in.re (str.substr var4 var7 var10) (re.inter re.allchar re.allchar)))(assert (not (str.suffixof (str.at var5 (str.indexof (str.replace var3 var0 var4) (str.at var5 (str.indexof var4 var4 (str.len (str.at var0 var7)))) (str.len var0))) (str.at var2 var7))))(assert (str.contains "ktm/*wn`p]" var0))(check-sat)