;  depth   = 3
;  nconst  = 6
;  assertions = 7
;  timeout = 2500
;  time    = {'smt_solvers/QF_S/cvc4/': 0.21372342109680176, 'smt_solvers/QF_S/z3seq/': 0.08690500259399414, 'smt_solvers/QF_S/z3str3/': 0.10557675361633301, 'smt_solvers/QF_S/z3str3fed/': 0.0729973316192627}
;  score   = 0.10814666748046875
;  stdout  = {'smt_solvers/QF_S/cvc4/': 'unsat', 'smt_solvers/QF_S/z3seq/': 'unsat', 'smt_solvers/QF_S/z3str3/': 'unsat', 'smt_solvers/QF_S/z3str3fed/': 'unsat'}
(set-logic QF_S)(declare-fun var0 () String)(declare-fun var1 () String)(declare-fun var2 () String)(declare-fun var3 () String)(declare-fun var4 () String)(declare-fun var5 () String)(declare-fun var6 () Int)(declare-fun var7 () Int)(declare-fun var8 () Int)(declare-fun var9 () Int)(declare-fun var10 () Int)(declare-fun var11 () Int)(declare-fun var12 () Bool)(declare-fun var13 () Bool)(declare-fun var14 () Bool)(declare-fun var15 () Bool)(declare-fun var16 () Bool)(declare-fun var17 () Bool)(assert (str.prefixof (str.substr var2 var9 var9) (str.substr var4 var6 var8)))(assert (< (str.indexof var0 var4 var9) (str.indexof var2 var2 var7)))(assert (str.contains (str.at "CWuK'@/S8x" var9) (str.replace var5 var4 var3)))(assert (> var9 var9))(assert (str.contains (str.substr var1 var9 var6) (str.replace var3 var2 var2)))(assert (<= (str.indexof var5 var0 var10) (str.len (str.replace "W4/Uhyw$Fa" var4 var5))))(assert (>= (str.len var1) (str.len var1)))(check-sat)