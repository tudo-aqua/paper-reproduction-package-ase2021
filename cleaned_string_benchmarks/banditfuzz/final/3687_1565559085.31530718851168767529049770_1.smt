;  depth   = 3
;  nconst  = 6
;  assertions = 5
;  timeout = 2500
;  time    = {'smt_solvers/QF_S/cvc4/': 0.3894054889678955, 'smt_solvers/QF_S/z3seq/': 0.1106865406036377, 'smt_solvers/QF_S/z3str3/': 0.11184835433959961, 'smt_solvers/QF_S/z3str3fed/': 0.08256268501281738}
;  score   = 0.2775571346282959
;  stdout  = {'smt_solvers/QF_S/cvc4/': 'unsat', 'smt_solvers/QF_S/z3seq/': 'unsat', 'smt_solvers/QF_S/z3str3/': 'unsat', 'smt_solvers/QF_S/z3str3fed/': 'unsat'}
(set-logic QF_S)(declare-fun var0 () String)(declare-fun var1 () String)(declare-fun var2 () String)(declare-fun var3 () String)(declare-fun var4 () String)(declare-fun var5 () String)(declare-fun var6 () Int)(declare-fun var7 () Int)(declare-fun var8 () Int)(declare-fun var9 () Int)(declare-fun var10 () Int)(declare-fun var11 () Int)(declare-fun var12 () Bool)(declare-fun var13 () Bool)(declare-fun var14 () Bool)(declare-fun var15 () Bool)(declare-fun var16 () Bool)(declare-fun var17 () Bool)(assert (> (str.indexof (str.at var0 6) (str.at "I""tMO:UJP," var7) (str.indexof var1 var2 var10)) (str.len (str.replace "9Un-nV/zVS" var2 var4))))(assert (str.suffixof (str.substr (str.replace var0 "_K+KK<OPjt" var5) (str.len var1) (str.len var2)) (str.at var4 var7)))(assert (str.contains (str.substr var3 10 var10) (str.replace var3 var4 var5)))(assert (str.suffixof var4 var4))(assert (str.in.re (str.at var3 var10) (re.inter re.allchar re.allchar)))(check-sat)