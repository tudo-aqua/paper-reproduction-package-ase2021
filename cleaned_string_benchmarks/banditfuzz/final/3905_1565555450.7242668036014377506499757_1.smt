;  depth   = 3
;  nconst  = 5
;  assertions = 5
;  timeout = 2500
;  time    = {'smt_solvers/QF_S/cvc4/': 1.5497450828552246, 'smt_solvers/QF_S/z3seq/': 0.08233070373535156, 'smt_solvers/QF_S/z3str3/': 0.09703660011291504, 'smt_solvers/QF_S/z3str3fed/': 0.0642237663269043}
;  score   = 1.4527084827423096
;  stdout  = {'smt_solvers/QF_S/cvc4/': 'unsat', 'smt_solvers/QF_S/z3seq/': 'unsat', 'smt_solvers/QF_S/z3str3/': 'unsat', 'smt_solvers/QF_S/z3str3fed/': 'unsat'}
(set-logic QF_S)(declare-fun var0 () String)(declare-fun var1 () String)(declare-fun var2 () String)(declare-fun var3 () String)(declare-fun var4 () String)(declare-fun var5 () Int)(declare-fun var6 () Int)(declare-fun var7 () Int)(declare-fun var8 () Int)(declare-fun var9 () Int)(declare-fun var10 () Bool)(declare-fun var11 () Bool)(declare-fun var12 () Bool)(declare-fun var13 () Bool)(declare-fun var14 () Bool)(assert (< (str.len (str.replace var2 var2 "8{fX9-Hy/*")) (str.indexof (str.replace var4 "Y""n/L/bW-B" var0) (str.replace var4 var4 var0) (str.len var3))))(assert (> (str.indexof var3 var3 var6) (str.len var1)))(assert (<= (str.len var0) (str.indexof var3 var3 var6)))(assert (str.prefixof (str.replace var2 var2 var0) (str.substr (str.replace var2 var4 var2) (str.indexof var4 var4 var9) (str.len var1))))(assert (str.contains (str.substr (str.substr "#O2xAx{?J0" var6 var8) (str.len var0) (str.len var2)) (str.at (str.replace var0 var2 var2) (str.len var4))))(check-sat)