;  depth   = 3
;  nconst  = 6
;  assertions = 7
;  timeout = 2500
;  time    = {'smt_solvers/QF_S/z3str3fed/': 0.07465863227844238, 'smt_solvers/QF_S/z3seq/': 0.09280562400817871, 'smt_solvers/QF_S/cvc4/': 1.0871174335479736, 'smt_solvers/QF_S/z3str3/': 0.1440715789794922}
;  score   = 0.9430458545684814
;  stdout  = {'smt_solvers/QF_S/z3str3fed/': 'unsat', 'smt_solvers/QF_S/z3seq/': 'unsat', 'smt_solvers/QF_S/cvc4/': 'unsat', 'smt_solvers/QF_S/z3str3/': 'unsat'}
(set-logic QF_S)(declare-fun var0 () String)(declare-fun var1 () String)(declare-fun var2 () String)(declare-fun var3 () String)(declare-fun var4 () String)(declare-fun var5 () String)(declare-fun var6 () Int)(declare-fun var7 () Int)(declare-fun var8 () Int)(declare-fun var9 () Int)(declare-fun var10 () Int)(declare-fun var11 () Int)(declare-fun var12 () Bool)(declare-fun var13 () Bool)(declare-fun var14 () Bool)(declare-fun var15 () Bool)(declare-fun var16 () Bool)(declare-fun var17 () Bool)(assert (>= (str.len (str.replace var4 ".xCLUQzvP%" var1)) (str.indexof (str.substr var5 var11 var9) (str.substr "2&z+{P-Vri" var9 var10) (str.indexof var2 var3 var10))))(assert (>= (str.indexof var3 "^l*\\|7@GOi" var9) (str.len (str.at var3 var9))))(assert (< (str.indexof var5 var5 (str.indexof (str.substr var3 var7 var8) (str.replace var1 var0 var5) (str.indexof var4 var0 var7))) (str.indexof var5 var2 var8)))(assert (> var6 var7))(assert (not (> (str.len var0) (str.indexof var2 var5 var6))))(assert (not (str.prefixof var0 "b:*5TW)')-")))(assert (>= (str.indexof (str.replace var5 var5 var1) (str.at var4 var9) (str.indexof var5 var2 4)) (str.indexof (str.substr var4 var6 var8) (str.++ var2 var2) (str.len var4))))(check-sat)