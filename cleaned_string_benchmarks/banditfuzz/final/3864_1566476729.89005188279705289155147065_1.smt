;  depth   = 3
;  nconst  = 6
;  assertions = 7
;  timeout = 2500
;  time    = {'smt_solvers/QF_S/z3str3fed/': 0.12599921226501465, 'smt_solvers/QF_S/z3str3/': 0.21037578582763672, 'smt_solvers/QF_S/cvc4/': 0.2796967029571533, 'smt_solvers/QF_S/z3seq/': 0.13999605178833008}
;  score   = 0.0693209171295166
;  stdout  = {'smt_solvers/QF_S/z3str3fed/': 'unsat', 'smt_solvers/QF_S/z3str3/': 'unsat', 'smt_solvers/QF_S/cvc4/': 'unsat', 'smt_solvers/QF_S/z3seq/': 'unsat'}
(set-logic QF_S)(declare-fun var0 () String)(declare-fun var1 () String)(declare-fun var2 () String)(declare-fun var3 () String)(declare-fun var4 () String)(declare-fun var5 () String)(declare-fun var6 () Int)(declare-fun var7 () Int)(declare-fun var8 () Int)(declare-fun var9 () Int)(declare-fun var10 () Int)(declare-fun var11 () Int)(declare-fun var12 () Bool)(declare-fun var13 () Bool)(declare-fun var14 () Bool)(declare-fun var15 () Bool)(declare-fun var16 () Bool)(declare-fun var17 () Bool)(assert (not (str.contains var3 var4)))(assert (< (str.len var4) (str.len var4)))(assert (str.in.re var1 re.allchar))(assert (str.in.re (str.at (str.at var0 var8) (str.indexof var2 var2 var8)) (re.* re.allchar)))(assert (< (str.indexof var3 var5 var9) (str.len var2)))(assert (str.prefixof (str.replace var1 var2 "w,DK=(T5u)") (str.substr (str.substr var1 var6 var10) (str.len var0) (str.len var4))))(assert (> (str.len var5) (str.len "}0\\""_[T2O*")))(check-sat)