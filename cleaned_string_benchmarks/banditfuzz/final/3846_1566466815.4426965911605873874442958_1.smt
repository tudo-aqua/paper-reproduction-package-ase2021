;  depth   = 3
;  nconst  = 6
;  assertions = 7
;  timeout = 2500
;  time    = {'smt_solvers/QF_S/z3str3/': 247.22356390953064, 'smt_solvers/QF_S/z3seq/': 7.110285758972168, 'smt_solvers/QF_S/cvc4/': 2500, 'smt_solvers/QF_S/z3str3fed/': 54.32854342460632}
;  score   = 7252.776436090469
;  stdout  = {'smt_solvers/QF_S/z3str3/': 'unsat', 'smt_solvers/QF_S/z3seq/': 'sat', 'smt_solvers/QF_S/cvc4/': 'timeout', 'smt_solvers/QF_S/z3str3fed/': 'unsat'}
(set-logic QF_S)(declare-fun var0 () String)(declare-fun var1 () String)(declare-fun var2 () String)(declare-fun var3 () String)(declare-fun var4 () String)(declare-fun var5 () String)(declare-fun var6 () Int)(declare-fun var7 () Int)(declare-fun var8 () Int)(declare-fun var9 () Int)(declare-fun var10 () Int)(declare-fun var11 () Int)(declare-fun var12 () Bool)(declare-fun var13 () Bool)(declare-fun var14 () Bool)(declare-fun var15 () Bool)(declare-fun var16 () Bool)(declare-fun var17 () Bool)(assert (> (str.indexof (str.replace var2 var0 var5) (str.substr var2 var7 var6) (str.len var5)) (str.indexof (str.at var1 var8) (str.replace var1 var3 var3) (str.indexof var0 var2 var9))))(assert (not (<= (str.len var0) (str.len var5))))(assert (str.prefixof (str.replace var0 var5 var0) (str.replace var3 var3 "LR}kkP9-[C")))(assert (not (str.in.re var2 re.allchar)))(assert (>= (str.len var5) (str.len var3)))(assert (str.contains var4 var2))(assert (> (str.indexof var1 var2 var6) (str.indexof (str.at var1 var6) (str.at var4 var6) (str.indexof var1 var0 var10))))(check-sat)