;  depth   = 3
;  nconst  = 6
;  assertions = 5
;  timeout = 2500
;  time    = {'smt_solvers/QF_S/z3str3/': 0.12515854835510254, 'smt_solvers/QF_S/z3str3fed/': 0.08411431312561035, 'smt_solvers/QF_S/z3seq/': 0.10521769523620605, 'smt_solvers/QF_S/cvc4/': 0.29443979263305664}
;  score   = 0.1692812442779541
;  stdout  = {'smt_solvers/QF_S/z3str3/': 'unsat', 'smt_solvers/QF_S/z3str3fed/': 'unsat', 'smt_solvers/QF_S/z3seq/': 'unsat', 'smt_solvers/QF_S/cvc4/': 'unsat'}
(set-logic QF_S)(declare-fun var0 () String)(declare-fun var1 () String)(declare-fun var2 () String)(declare-fun var3 () String)(declare-fun var4 () String)(declare-fun var5 () String)(declare-fun var6 () Int)(declare-fun var7 () Int)(declare-fun var8 () Int)(declare-fun var9 () Int)(declare-fun var10 () Int)(declare-fun var11 () Int)(declare-fun var12 () Bool)(declare-fun var13 () Bool)(declare-fun var14 () Bool)(declare-fun var15 () Bool)(declare-fun var16 () Bool)(declare-fun var17 () Bool)(assert (str.contains (str.at var1 var9) (str.at var3 var8)))(assert (<= (str.indexof var0 var2 var6) (str.indexof var4 var2 var6)))(assert (str.contains (str.at var0 var10) (str.replace (str.replace "NGW:;t-CXF" var4 var5) (str.at var3 var7) (str.replace var4 var2 var2))))(assert (str.prefixof (str.replace var5 var5 var3) (str.at var5 (str.indexof (str.substr var2 var9 var10) (str.substr var1 var7 var6) (str.len var5)))))(assert (not var16))(check-sat)