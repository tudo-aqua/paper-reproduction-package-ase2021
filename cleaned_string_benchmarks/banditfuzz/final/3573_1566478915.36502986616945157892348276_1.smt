;  depth   = 3
;  nconst  = 6
;  assertions = 7
;  timeout = 2500
;  time    = {'smt_solvers/QF_S/z3seq/': 0.09005570411682129, 'smt_solvers/QF_S/z3str3fed/': 0.07490396499633789, 'smt_solvers/QF_S/cvc4/': 0.20081353187561035, 'smt_solvers/QF_S/z3str3/': 0.16403913497924805}
;  score   = 0.036774396896362305
;  stdout  = {'smt_solvers/QF_S/z3seq/': 'unsat', 'smt_solvers/QF_S/z3str3fed/': 'unsat', 'smt_solvers/QF_S/cvc4/': 'unsat', 'smt_solvers/QF_S/z3str3/': 'unsat'}
(set-logic QF_S)(declare-fun var0 () String)(declare-fun var1 () String)(declare-fun var2 () String)(declare-fun var3 () String)(declare-fun var4 () String)(declare-fun var5 () String)(declare-fun var6 () Int)(declare-fun var7 () Int)(declare-fun var8 () Int)(declare-fun var9 () Int)(declare-fun var10 () Int)(declare-fun var11 () Int)(declare-fun var12 () Bool)(declare-fun var13 () Bool)(declare-fun var14 () Bool)(declare-fun var15 () Bool)(declare-fun var16 () Bool)(declare-fun var17 () Bool)(assert (str.suffixof var5 "+VWzX\\@0R/"))(assert (str.contains (str.replace (str.at var0 var8) (str.substr var4 var11 var8) (str.replace var5 var1 var0)) (str.replace var0 var0 var2)))(assert (< (str.indexof var4 var3 var8) (str.indexof var3 var1 var11)))(assert (< (str.len var1) (str.indexof var3 var4 var7)))(assert (str.in.re var5 re.allchar))(assert (str.prefixof (str.at var5 var8) (str.replace var1 "LxkGWrsSg@" var5)))(assert (<= (str.len var3) (str.indexof var1 var5 var10)))(check-sat)