;  depth   = 3
;  nconst  = 6
;  assertions = 7
;  timeout = 2500
;  time    = {'smt_solvers/QF_S/z3str3/': 0.3745138645172119, 'smt_solvers/QF_S/z3str3fed/': 0.20831298828125, 'smt_solvers/QF_S/z3seq/': 2.8885397911071777, 'smt_solvers/QF_S/cvc4/': 2500}
;  score   = 7497.111460208893
;  stdout  = {'smt_solvers/QF_S/z3str3/': 'unsat', 'smt_solvers/QF_S/z3str3fed/': 'unsat', 'smt_solvers/QF_S/z3seq/': 'sat', 'smt_solvers/QF_S/cvc4/': 'timeout'}
(set-logic QF_S)(declare-fun var0 () String)(declare-fun var1 () String)(declare-fun var2 () String)(declare-fun var3 () String)(declare-fun var4 () String)(declare-fun var5 () String)(declare-fun var6 () Int)(declare-fun var7 () Int)(declare-fun var8 () Int)(declare-fun var9 () Int)(declare-fun var10 () Int)(declare-fun var11 () Int)(declare-fun var12 () Bool)(declare-fun var13 () Bool)(declare-fun var14 () Bool)(declare-fun var15 () Bool)(declare-fun var16 () Bool)(declare-fun var17 () Bool)(assert (str.in.re (str.at var1 var7) (re.inter re.allchar re.allchar)))(assert (< (str.len var0) (str.indexof (str.at var4 var9) (str.substr var1 var7 var7) (str.indexof var1 var5 var10))))(assert (> var8 3))(assert (str.in.re var3 re.allchar))(assert (str.suffixof (str.substr (str.substr var0 var11 var7) (str.len var3) (str.len var0)) (str.substr var5 var9 var9)))(assert (< (str.len var5) (str.indexof (str.replace var2 var5 "JK(%5@BSHV") (str.replace "DO0hF\\7E7f" var5 var2) (str.len var5))))(assert (str.suffixof (str.substr var4 5 var6) (str.at var2 var6)))(check-sat)