;  depth   = 3
;  nconst  = 6
;  assertions = 7
;  timeout = 2500
;  time    = {'smt_solvers/QF_S/z3str3/': 0.23653435707092285, 'smt_solvers/QF_S/z3seq/': 0.09781146049499512, 'smt_solvers/QF_S/cvc4/': 0.40109968185424805, 'smt_solvers/QF_S/z3str3fed/': 0.07641863822937012}
;  score   = 0.1645653247833252
;  stdout  = {'smt_solvers/QF_S/z3str3/': 'unsat', 'smt_solvers/QF_S/z3seq/': 'unsat', 'smt_solvers/QF_S/cvc4/': 'unsat', 'smt_solvers/QF_S/z3str3fed/': 'unsat'}
(set-logic QF_S)(declare-fun var0 () String)(declare-fun var1 () String)(declare-fun var2 () String)(declare-fun var3 () String)(declare-fun var4 () String)(declare-fun var5 () String)(declare-fun var6 () Int)(declare-fun var7 () Int)(declare-fun var8 () Int)(declare-fun var9 () Int)(declare-fun var10 () Int)(declare-fun var11 () Int)(declare-fun var12 () Bool)(declare-fun var13 () Bool)(declare-fun var14 () Bool)(declare-fun var15 () Bool)(declare-fun var16 () Bool)(declare-fun var17 () Bool)(assert (> (str.indexof (str.at var2 var8) (str.replace var1 "`$Ec-%Wmv'" var5) (str.len var0)) (str.indexof var3 var1 var7)))(assert (> var7 5))(assert (> (str.indexof var2 var3 var6) (str.len (str.replace "&MQ:""Dh7$?" var5 var3))))(assert (not (<= var10 var6)))(assert (> (str.indexof var4 var0 4) (str.indexof var3 var1 var7)))(assert (not (str.suffixof "U>:Ixe%zYq" var5)))(assert (>= (str.indexof (str.substr var3 var8 var8) (str.replace var2 "k!~jGoFd,X" var2) (str.len var2)) (str.len var3)))(check-sat)