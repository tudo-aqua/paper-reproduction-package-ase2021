;  depth   = 3
;  nconst  = 5
;  assertions = 5
;  timeout = 2500
;  time    = {'smt_solvers/QF_S/cvc4/': 0.3039274215698242, 'smt_solvers/QF_S/z3str3/': 0.15694093704223633, 'smt_solvers/QF_S/z3str3fed/': 0.09796643257141113, 'smt_solvers/QF_S/z3seq/': 0.11414051055908203}
;  score   = 0.1469864845275879
;  stdout  = {'smt_solvers/QF_S/cvc4/': 'unsat', 'smt_solvers/QF_S/z3str3/': 'unsat', 'smt_solvers/QF_S/z3str3fed/': 'unsat', 'smt_solvers/QF_S/z3seq/': 'unsat'}
(set-logic QF_S)(declare-fun var0 () String)(declare-fun var1 () String)(declare-fun var2 () String)(declare-fun var3 () String)(declare-fun var4 () String)(declare-fun var5 () Int)(declare-fun var6 () Int)(declare-fun var7 () Int)(declare-fun var8 () Int)(declare-fun var9 () Int)(declare-fun var10 () Bool)(declare-fun var11 () Bool)(declare-fun var12 () Bool)(declare-fun var13 () Bool)(declare-fun var14 () Bool)(assert (>= (str.len (str.replace var4 var1 var4)) (str.indexof (str.replace var1 var4 var4) (str.substr var0 var7 var8) (str.indexof var3 var2 var5))))(assert (str.contains (str.replace (str.at var4 var6) (str.at var3 var6) (str.substr var4 var5 var5)) (str.substr var1 var9 3)))(assert (<= (str.indexof var1 var4 var6) (str.len var2)))(assert (< (str.indexof var3 "_|HB!D+O\\4" var6) (str.indexof (str.substr var3 var9 var8) (str.substr "0Ok=~*o=@J" var8 var5) (str.len var0))))(assert (str.in.re (str.at (str.at var3 5) (str.indexof var1 var2 8)) (re.+ re.allchar)))(check-sat)