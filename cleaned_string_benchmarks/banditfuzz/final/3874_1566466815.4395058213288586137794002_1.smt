;  depth   = 3
;  nconst  = 6
;  assertions = 7
;  timeout = 2500
;  time    = {'smt_solvers/QF_S/cvc4/': 2500, 'smt_solvers/QF_S/z3str3fed/': 0.16998076438903809, 'smt_solvers/QF_S/z3seq/': 0.3844563961029053, 'smt_solvers/QF_S/z3str3/': 14.397702693939209}
;  score   = 7485.602297306061
;  stdout  = {'smt_solvers/QF_S/cvc4/': 'timeout', 'smt_solvers/QF_S/z3str3fed/': 'unsat', 'smt_solvers/QF_S/z3seq/': 'unsat', 'smt_solvers/QF_S/z3str3/': 'unsat'}
(set-logic QF_S)(declare-fun var0 () String)(declare-fun var1 () String)(declare-fun var2 () String)(declare-fun var3 () String)(declare-fun var4 () String)(declare-fun var5 () String)(declare-fun var6 () Int)(declare-fun var7 () Int)(declare-fun var8 () Int)(declare-fun var9 () Int)(declare-fun var10 () Int)(declare-fun var11 () Int)(declare-fun var12 () Bool)(declare-fun var13 () Bool)(declare-fun var14 () Bool)(declare-fun var15 () Bool)(declare-fun var16 () Bool)(declare-fun var17 () Bool)(assert (<= (str.len var0) (str.indexof var4 var3 var11)))(assert (not var17))(assert (> (str.len var4) (str.len var2)))(assert (str.contains (str.replace var1 var0 var5) (str.at var5 2)))(assert (not (str.in.re var2 re.allchar)))(assert (not (str.contains (str.replace var3 var2 var4) (str.substr var3 var8 var11))))(assert (< (str.indexof (str.at var1 var10) (str.replace var0 var2 var4) (str.len var0)) (str.indexof (str.replace var3 var2 "CZk;COn+AO") (str.at var2 var6) (str.len var4))))(check-sat)