;  depth   = 3
;  nconst  = 6
;  assertions = 5
;  timeout = 2500
;  time    = {'smt_solvers/QF_S/z3seq/': 0.10966062545776367, 'smt_solvers/QF_S/cvc4/': 0.5346801280975342, 'smt_solvers/QF_S/z3str3fed/': 0.08662891387939453, 'smt_solvers/QF_S/z3str3/': 0.1380295753479004}
;  score   = 0.3966505527496338
;  stdout  = {'smt_solvers/QF_S/z3seq/': 'unsat', 'smt_solvers/QF_S/cvc4/': 'unsat', 'smt_solvers/QF_S/z3str3fed/': 'unsat', 'smt_solvers/QF_S/z3str3/': 'unsat'}
(set-logic QF_S)(declare-fun var0 () String)(declare-fun var1 () String)(declare-fun var2 () String)(declare-fun var3 () String)(declare-fun var4 () String)(declare-fun var5 () String)(declare-fun var6 () Int)(declare-fun var7 () Int)(declare-fun var8 () Int)(declare-fun var9 () Int)(declare-fun var10 () Int)(declare-fun var11 () Int)(declare-fun var12 () Bool)(declare-fun var13 () Bool)(declare-fun var14 () Bool)(declare-fun var15 () Bool)(declare-fun var16 () Bool)(declare-fun var17 () Bool)(assert (not (str.suffixof (str.at var1 var10) (str.replace var0 var4 var0))))(assert (< (str.indexof var3 var3 (str.len (str.replace var1 var5 var4))) (str.indexof (str.++ var3 var3) (str.++ var3 var3) (str.indexof (str.substr var5 var7 var6) (str.at var5 (str.indexof (str.at var0 var9) (str.substr var2 (str.indexof (str.replace var2 var2 var2) (str.at var3 var11) (str.len var0)) (str.indexof var2 var0 var6)) (str.indexof var3 var5 var7))) (str.len var3)))))(assert (not (> var7 var11)))(assert (str.in.re (str.substr var5 var8 var7) (re.++ re.allchar re.allchar)))(assert (str.contains var3 var5))(check-sat)