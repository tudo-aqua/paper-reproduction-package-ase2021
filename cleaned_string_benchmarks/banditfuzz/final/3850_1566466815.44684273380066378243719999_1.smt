;  depth   = 3
;  nconst  = 6
;  assertions = 7
;  timeout = 2500
;  time    = {'smt_solvers/QF_S/cvc4/': 2500, 'smt_solvers/QF_S/z3seq/': 0.09159660339355469, 'smt_solvers/QF_S/z3str3fed/': 0.0883638858795166, 'smt_solvers/QF_S/z3str3/': 0.14766788482666016}
;  score   = 7499.852332115173
;  stdout  = {'smt_solvers/QF_S/cvc4/': 'timeout', 'smt_solvers/QF_S/z3seq/': 'unsat', 'smt_solvers/QF_S/z3str3fed/': 'unsat', 'smt_solvers/QF_S/z3str3/': 'unsat'}
(set-logic QF_S)(declare-fun var0 () String)(declare-fun var1 () String)(declare-fun var2 () String)(declare-fun var3 () String)(declare-fun var4 () String)(declare-fun var5 () String)(declare-fun var6 () Int)(declare-fun var7 () Int)(declare-fun var8 () Int)(declare-fun var9 () Int)(declare-fun var10 () Int)(declare-fun var11 () Int)(declare-fun var12 () Bool)(declare-fun var13 () Bool)(declare-fun var14 () Bool)(declare-fun var15 () Bool)(declare-fun var16 () Bool)(declare-fun var17 () Bool)(assert (str.contains (str.at var5 var6) (str.replace var2 var4 var3)))(assert (str.in.re (str.at (str.substr var2 var6 var6) (str.indexof "Rq;,/9zu>?" var2 var10)) (re.* re.allchar)))(assert (< (str.indexof (str.substr var0 var10 var7) (str.substr var1 var6 var8) (str.len var3)) (str.len (str.at var2 var7))))(assert (str.suffixof (str.at var0 var10) (str.replace var0 var1 var1)))(assert (> (str.indexof (str.substr var2 var6 var6) (str.replace var4 var3 "Yd!xOpOcLQ") (str.len var3)) (str.len var3)))(assert (str.suffixof var0 var4))(assert (str.suffixof var4 "<'8fnv1(>I"))(check-sat)