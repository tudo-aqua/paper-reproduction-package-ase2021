;  depth   = 3
;  nconst  = 6
;  assertions = 7
;  timeout = 2500
;  time    = {'smt_solvers/QF_S/z3seq/': 0.11673212051391602, 'smt_solvers/QF_S/cvc4/': 0.2760927677154541, 'smt_solvers/QF_S/z3str3fed/': 0.13171672821044922, 'smt_solvers/QF_S/z3str3/': 0.1939232349395752}
;  score   = 0.0821695327758789
;  stdout  = {'smt_solvers/QF_S/z3seq/': 'unsat', 'smt_solvers/QF_S/cvc4/': 'unsat', 'smt_solvers/QF_S/z3str3fed/': 'unsat', 'smt_solvers/QF_S/z3str3/': 'unsat'}
(set-logic QF_S)(declare-fun var0 () String)(declare-fun var1 () String)(declare-fun var2 () String)(declare-fun var3 () String)(declare-fun var4 () String)(declare-fun var5 () String)(declare-fun var6 () Int)(declare-fun var7 () Int)(declare-fun var8 () Int)(declare-fun var9 () Int)(declare-fun var10 () Int)(declare-fun var11 () Int)(declare-fun var12 () Bool)(declare-fun var13 () Bool)(declare-fun var14 () Bool)(declare-fun var15 () Bool)(declare-fun var16 () Bool)(declare-fun var17 () Bool)(assert (not (str.suffixof var2 var2)))(assert (str.prefixof (str.at (str.substr var3 var9 var6) (str.len var2)) (str.at (str.at var1 var7) (str.len var5))))(assert (str.contains (str.substr var2 var8 var7) (str.substr var5 var11 var8)))(assert (str.in.re var0 re.allchar))(assert (str.prefixof (str.replace var5 var3 var5) (str.replace "cjzu{qand-" var4 var2)))(assert (< (str.len var0) (str.len var3)))(assert (str.prefixof (str.replace var0 var2 var0) (str.replace (str.at var3 var9) (str.at var4 var7) (str.at var4 var7))))(check-sat)