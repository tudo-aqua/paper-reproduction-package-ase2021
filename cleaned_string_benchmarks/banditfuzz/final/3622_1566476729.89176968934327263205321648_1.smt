;  depth   = 3
;  nconst  = 6
;  assertions = 7
;  timeout = 2500
;  time    = {'smt_solvers/QF_S/cvc4/': 2.039435863494873, 'smt_solvers/QF_S/z3str3/': 0.09961581230163574, 'smt_solvers/QF_S/z3str3fed/': 0.12446045875549316, 'smt_solvers/QF_S/z3seq/': 0.11031222343444824}
;  score   = 1.9149754047393799
;  stdout  = {'smt_solvers/QF_S/cvc4/': 'unsat', 'smt_solvers/QF_S/z3str3/': 'unsat', 'smt_solvers/QF_S/z3str3fed/': 'unsat', 'smt_solvers/QF_S/z3seq/': 'unsat'}
(set-logic QF_S)(declare-fun var0 () String)(declare-fun var1 () String)(declare-fun var2 () String)(declare-fun var3 () String)(declare-fun var4 () String)(declare-fun var5 () String)(declare-fun var6 () Int)(declare-fun var7 () Int)(declare-fun var8 () Int)(declare-fun var9 () Int)(declare-fun var10 () Int)(declare-fun var11 () Int)(declare-fun var12 () Bool)(declare-fun var13 () Bool)(declare-fun var14 () Bool)(declare-fun var15 () Bool)(declare-fun var16 () Bool)(declare-fun var17 () Bool)(assert (<= var6 var10))(assert (< (str.len var4) (str.indexof (str.substr var2 10 var7) (str.replace var2 var3 var1) (str.len var1))))(assert (> (str.len "=+c/le@pC3") (str.indexof var4 var0 var11)))(assert (> (str.indexof (str.substr var2 var11 var9) (str.substr var2 var9 var6) (str.len var0)) (str.len var4)))(assert (str.in.re (str.substr var5 var7 var9) (re.++ re.allchar re.allchar)))(assert (>= (str.indexof "x:7Tez^{B]" var2 var10) (str.len var5)))(assert (str.prefixof var4 var3))(check-sat)