;  depth   = 3
;  nconst  = 6
;  assertions = 5
;  timeout = 2500
;  time    = {'smt_solvers/QF_S/z3str3fed/': 0.08376312255859375, 'smt_solvers/QF_S/z3seq/': 0.10112714767456055, 'smt_solvers/QF_S/z3str3/': 0.10789203643798828, 'smt_solvers/QF_S/cvc4/': 2500}
;  score   = 7499.892107963562
;  stdout  = {'smt_solvers/QF_S/z3str3fed/': 'unsat', 'smt_solvers/QF_S/z3seq/': 'unsat', 'smt_solvers/QF_S/z3str3/': 'unsat', 'smt_solvers/QF_S/cvc4/': 'timeout'}
(set-logic QF_S)(declare-fun var0 () String)(declare-fun var1 () String)(declare-fun var2 () String)(declare-fun var3 () String)(declare-fun var4 () String)(declare-fun var5 () String)(declare-fun var6 () Int)(declare-fun var7 () Int)(declare-fun var8 () Int)(declare-fun var9 () Int)(declare-fun var10 () Int)(declare-fun var11 () Int)(declare-fun var12 () Bool)(declare-fun var13 () Bool)(declare-fun var14 () Bool)(declare-fun var15 () Bool)(declare-fun var16 () Bool)(declare-fun var17 () Bool)(assert (not (<= var6 var11)))(assert (<= (str.len (str.substr var0 var11 var7)) (str.indexof (str.substr ")/kxCc9H5l" (str.indexof (str.replace var1 var5 var5) (str.at var1 var7) (str.len var1)) (str.indexof var4 var0 var9)) (str.at var2 var7) (str.len var3))))(assert (> (str.indexof (str.at var0 var9) (str.at var4 5) (str.indexof var0 var4 8)) (str.indexof (str.substr var3 var7 var7) (str.substr "~^zWj!6485" (str.indexof (str.replace var3 var4 var1) (str.at var3 var10) (str.indexof var2 var0 var6)) (str.indexof (str.substr var3 var8 var8) (str.substr var5 var9 var8) (str.indexof var1 var2 var9))) (str.indexof var0 var3 var6))))(assert (>= var6 var11))(assert (< (str.len var5) (str.indexof var4 var4 (str.len var3))))(check-sat)