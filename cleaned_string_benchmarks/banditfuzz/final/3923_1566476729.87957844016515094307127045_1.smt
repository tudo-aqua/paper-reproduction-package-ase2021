;  depth   = 3
;  nconst  = 6
;  assertions = 7
;  timeout = 2500
;  time    = {'smt_solvers/QF_S/z3str3/': 0.11315321922302246, 'smt_solvers/QF_S/z3seq/': 0.09714698791503906, 'smt_solvers/QF_S/cvc4/': 0.2626824378967285, 'smt_solvers/QF_S/z3str3fed/': 0.07225394248962402}
;  score   = 0.14952921867370605
;  stdout  = {'smt_solvers/QF_S/z3str3/': 'unsat', 'smt_solvers/QF_S/z3seq/': 'unsat', 'smt_solvers/QF_S/cvc4/': 'unsat', 'smt_solvers/QF_S/z3str3fed/': 'unsat'}
(set-logic QF_S)(declare-fun var0 () String)(declare-fun var1 () String)(declare-fun var2 () String)(declare-fun var3 () String)(declare-fun var4 () String)(declare-fun var5 () String)(declare-fun var6 () Int)(declare-fun var7 () Int)(declare-fun var8 () Int)(declare-fun var9 () Int)(declare-fun var10 () Int)(declare-fun var11 () Int)(declare-fun var12 () Bool)(declare-fun var13 () Bool)(declare-fun var14 () Bool)(declare-fun var15 () Bool)(declare-fun var16 () Bool)(declare-fun var17 () Bool)(assert (str.suffixof var5 var1))(assert (>= var10 var10))(assert (str.prefixof (str.substr var5 var11 var9) (str.at var0 var9)))(assert (> (str.indexof var1 var1 var10) (str.len var1)))(assert (>= var6 var11))(assert (< (str.len "g+[:-3RMeo") (str.len var5)))(assert (str.suffixof (str.replace (str.at "d<(8:I>ZY6" var8) (str.substr var2 var7 var7) (str.substr var0 var7 var11)) (str.++ (str.substr var5 (str.len (str.at var5 var9)) (str.len (str.substr var3 var7 var6))) (str.substr var5 (str.len (str.at var5 var9)) (str.len (str.substr var3 var7 var6))))))(check-sat)