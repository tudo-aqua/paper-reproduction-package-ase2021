;  depth   = 3
;  nconst  = 6
;  assertions = 5
;  timeout = 2500
;  time    = {'smt_solvers/QF_S/z3str3fed/': 0.08109402656555176, 'smt_solvers/QF_S/cvc4/': 2500, 'smt_solvers/QF_S/z3seq/': 0.09736251831054688, 'smt_solvers/QF_S/z3str3/': 0.10729312896728516}
;  score   = 7499.892706871033
;  stdout  = {'smt_solvers/QF_S/z3str3fed/': 'unsat', 'smt_solvers/QF_S/cvc4/': 'timeout', 'smt_solvers/QF_S/z3seq/': 'unsat', 'smt_solvers/QF_S/z3str3/': 'unsat'}
(set-logic QF_S)(declare-fun var0 () String)(declare-fun var1 () String)(declare-fun var2 () String)(declare-fun var3 () String)(declare-fun var4 () String)(declare-fun var5 () String)(declare-fun var6 () Int)(declare-fun var7 () Int)(declare-fun var8 () Int)(declare-fun var9 () Int)(declare-fun var10 () Int)(declare-fun var11 () Int)(declare-fun var12 () Bool)(declare-fun var13 () Bool)(declare-fun var14 () Bool)(declare-fun var15 () Bool)(declare-fun var16 () Bool)(declare-fun var17 () Bool)(assert (<= (str.indexof var2 "#b+nq0!Kp4" var10) (str.indexof var0 var4 var11)))(assert (>= (str.len (str.at var5 var10)) (str.len var2)))(assert (str.contains (str.replace var5 var4 var3) (str.replace (str.substr var3 var8 var7) (str.replace var0 var4 var0) (str.at var1 var9))))(assert (> (str.indexof (str.replace var2 var2 var2) (str.substr var2 0 var11) (str.indexof var3 var1 2)) (str.indexof (str.substr var2 var6 var7) (str.replace var4 var4 var4) (str.indexof var4 var5 5))))(assert (str.contains var5 var4))(check-sat)